{
  "$id": "https://json-schema.org/draft/2020-12/schema",
  "title": "Registers",
  "description": "A register description.",
  "type": "object",
  "required": [
    "schema",
    "root",
    "elements"
  ],
  "properties": {
    "schema": {
      "description": "Contains schema version information",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "The register.schema.json version the document targets",
          "type": "string"
        }
      }
    },
    "root": {
      "description": "Contains design information",
      "type": "object",
      "required": [
        "children"
      ],
      "properties": {
        "name": {
          "description": "The name of the design",
          "type": "string"
        },
        "display_name": {
          "description": "The name of the design meant to be displayed",
          "type": "string"
        },
        "version": {
          "description": "The design version",
          "type": "string"
        },
        "links": {
          "description": "Relevant links (text/URL pairs) for the design.",
          "type": "object",
          "patternProperties": {
            ".*": {
              "description": "A URI",
              "type": "string"
            }
          }
        },
        "data_width": {
          "description": "Size of registers in number of bits",
          "type": "number"
        },
        "children": {
          "description": "An array of top level element IDs",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "elements": {
      "description": "Design elements",
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        ".*": {
          "description": "A design element",
          "type": "object",
          "required": [
            "id",
            "name",
            "type",
            "offset"
          ],
          "properties": {
            "id": {
              "description": "A unique element ID",
              "type": "string"
            },
            "name": {
              "description": "The name of the element",
              "type": "string"
            },
            "type": {
              "description": "The element type",
              "enum": [
                "blk",
                "reg",
                "mem",
                "include"
              ]
            },
            "data_width": {
              "description": "Size of registers in number of bits",
              "type": "number"
            },
            "offset": {
              "description": "The offset of the element relative to its parent",
              "type": [
                "string",
                "number"
              ],
              "pattern": "^0x[0-9a-fA-F]+$"
            },
            "doc": {
              "description": "Element documentation",
              "type": "string"
            }
          },
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "reg"
                  }
                }
              },
              "then": {
                "required": [
                  "fields"
                ],
                "properties": {
                  "fields": {
                    "description": "An array of child element IDs",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "nbits",
                        "lsb",
                        "name",
                        "access"
                      ],
                      "properties": {
                        "nbits": {
                          "description": "Number of bits",
                          "type": "integer",
                          "minimum": 1
                        },
                        "lsb": {
                          "description": "Position of the least significant bit",
                          "type": "integer",
                          "minimum": 0
                        },
                        "name": {
                          "description": "The name of the register field",
                          "type": "string"
                        },
                        "access": {
                          "description": "The software access type of the field",
                          "type": "string"
                        },
                        "reset": {
                          "description": "The reset value of the field",
                          "type": [
                            "string",
                            "number",
                            "object"
                          ],
                          "pattern": "^(0x|0b)[0-9a-fA-F|?]+$",
                          "properties": {
                            "value": {
                              "description": "the value of the reset",
                              "type": [
                                "string",
                                "number"
                              ],
                              "pattern": "^(0x|0b)[0-9a-fA-F|?]+$"
                            },
                            "resets": {
                              "description": "named reset states to associate with the given reset value",
                              "type": "array"
                            }
                          }
                        },
                        "doc": {
                          "description": "Field documentation",
                          "type": "string"
                        },
                        "enum": {
                          "description": "Enumerated field values associated with a label",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the enumerated field value",
                                "type": "string"
                              },
                              "value": {
                                "description": "The field value to associate with the name",
                                "type": [
                                  "string",
                                  "number"
                                ]
                              },
                              "doc": {
                                "description": "The description of the enumerated field value",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "include"
                  }
                }
              },
              "then": {
                "required": [
                  "url"
                ],
                "properties": {
                  "url": {
                    "description": "URL to fetch data from in nested inclusion block",
                    "type": "string"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "blk"
                  }
                }
              },
              "then": {
                "required": [
                  "children"
                ],
                "properties": {
                  "children": {
                    "description": "An array of child element IDs",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  }
}